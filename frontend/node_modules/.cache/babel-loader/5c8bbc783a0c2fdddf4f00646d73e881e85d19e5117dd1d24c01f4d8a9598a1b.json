{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport \"./Game.scss\";\nconst Game = ({\n  productsWithMilk,\n  productsWithoutMilk\n}) => {\n\n  //  console.log(\"productsWithMilk: \", productsWithMilk);\n  //  console.log(\"productsWithoutMilk: \", productsWithoutMilk);\n\n  //  const [gameOptions, setGameOptions] = useState([]);\n\n  //  useEffect(() => {\n  //   const options = [];\n\n  //   const randomWithoutMilkIndex = Math.floor(Math.random() * productsWithoutMilk.length);\n  //   options.push(productsWithoutMilk[randomWithoutMilkIndex]);\n\n  //   for (let i = 0; i < 2; i++) {\n  //     let isAdded = false;\n  //     while (!isAdded) {\n  //       const randomWithMilkIndex = Math.floor(Math.random() * productsWithMilk.length);\n  //       const selectedProduct = productsWithMilk[randomWithMilkIndex];\n  //       if (!options.includes(selectedProduct)) {\n  //         options.push(selectedProduct);\n  //         isAdded = true;\n  //       }\n  //     }\n  //   }\n\n  //   setGameOptions(options);\n  // }, [productsWithMilk, productsWithoutMilk]);\n\n  //   return (\n  //     <div>\n  //       Hier wird gespielt\n\n  //       {gameOptions.map((option, index)=>{\n  //         return(\n  //         <p key={index}>{option}</p>\n  //       )})}\n  //     </div>\n  //   )\n};\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Game","productsWithMilk","productsWithoutMilk","_c","$RefreshReg$"],"sources":["/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/no_shit_day/frontend/src/pages/Game/Game.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Game.scss\";\n\nconst Game = ({productsWithMilk, productsWithoutMilk}) => {\n\n//  console.log(\"productsWithMilk: \", productsWithMilk);\n//  console.log(\"productsWithoutMilk: \", productsWithoutMilk);\n\n//  const [gameOptions, setGameOptions] = useState([]);\n\n//  useEffect(() => {\n//   const options = [];\n\n//   const randomWithoutMilkIndex = Math.floor(Math.random() * productsWithoutMilk.length);\n//   options.push(productsWithoutMilk[randomWithoutMilkIndex]);\n\n\n//   for (let i = 0; i < 2; i++) {\n//     let isAdded = false;\n//     while (!isAdded) {\n//       const randomWithMilkIndex = Math.floor(Math.random() * productsWithMilk.length);\n//       const selectedProduct = productsWithMilk[randomWithMilkIndex];\n//       if (!options.includes(selectedProduct)) {\n//         options.push(selectedProduct);\n//         isAdded = true;\n//       }\n//     }\n//   }\n\n\n//   setGameOptions(options);\n// }, [productsWithMilk, productsWithoutMilk]);\n\n//   return (\n//     <div>\n//       Hier wird gespielt\n\n//       {gameOptions.map((option, index)=>{\n//         return(\n//         <p key={index}>{option}</p>\n//       )})}\n//     </div>\n//   )\n}\n\nexport default Game;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAACC,gBAAgB;EAAEC;AAAmB,CAAC,KAAK;;EAE1D;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;AAAA,CACC;AAAAC,EAAA,GAxCKH,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}