{"ast":null,"code":"var _jsxFileName = \"/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchOpenFoodFacts = async url => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.products;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nconst filterProductsWithoutAllergen = (products, allergen) => {\n  return products.filter(product => {\n    if (!product.ingredients_text) return true;\n    return !product.ingredients_text.toLowerCase().includes(allergen);\n  });\n};\nconst FoodListZwei = () => {\n  _s();\n  const [foodDataWithAllergen, setFoodDataWithAllergen] = useState([]);\n  const [foodDataWithoutAllergen, setFoodDataWithoutAllergen] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = 'https://world.openfoodfacts.org/api/v2/search?fields=product_name,brands,quantity,ingredients_text,image_url';\n        const allProducts = await fetchOpenFoodFacts(url);\n        const productsWithAllergen = allProducts.filter(product => product.ingredients_text && product.ingredients_text.toLowerCase().includes('milk'));\n        const productsWithoutAllergen = filterProductsWithoutAllergen(allProducts, 'milk');\n        setFoodDataWithAllergen(productsWithAllergen);\n        setFoodDataWithoutAllergen(productsWithoutAllergen);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Products With Milk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), foodDataWithAllergen.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodDataWithAllergen.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Brand: \", product.brands]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ingredients: \", product.ingredients_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), product.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image_url,\n          alt: product.product_name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Products Without Milk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), foodDataWithoutAllergen.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodDataWithoutAllergen.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Brand: \", product.brands]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ingredients: \", product.ingredients_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), product.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image_url,\n          alt: product.product_name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodListZwei, \"2qsnZhrqCocfxLJkgtWB3edhyLI=\");\n_c = FoodListZwei;\nexport default FoodListZwei;\nvar _c;\n$RefreshReg$(_c, \"FoodListZwei\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","fetchOpenFoodFacts","url","response","fetch","ok","Error","data","json","products","error","message","filterProductsWithoutAllergen","allergen","filter","product","ingredients_text","toLowerCase","includes","FoodListZwei","_s","foodDataWithAllergen","setFoodDataWithAllergen","foodDataWithoutAllergen","setFoodDataWithoutAllergen","setError","loading","setLoading","fetchData","allProducts","productsWithAllergen","productsWithoutAllergen","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","product_name","brands","quantity","image_url","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst fetchOpenFoodFacts = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.products;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nconst filterProductsWithoutAllergen = (products, allergen) => {\n  return products.filter(product => {\n    if (!product.ingredients_text) return true;\n    return !product.ingredients_text.toLowerCase().includes(allergen);\n  });\n};\n\nconst FoodListZwei = () => {\n  const [foodDataWithAllergen, setFoodDataWithAllergen] = useState([]);\n  const [foodDataWithoutAllergen, setFoodDataWithoutAllergen] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = 'https://world.openfoodfacts.org/api/v2/search?fields=product_name,brands,quantity,ingredients_text,image_url';\n\n        const allProducts = await fetchOpenFoodFacts(url);\n\n        const productsWithAllergen = allProducts.filter(product =>\n          product.ingredients_text && product.ingredients_text.toLowerCase().includes('milk')\n        );\n\n        const productsWithoutAllergen = filterProductsWithoutAllergen(allProducts, 'milk');\n\n        setFoodDataWithAllergen(productsWithAllergen);\n        setFoodDataWithoutAllergen(productsWithoutAllergen);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Food Products With Milk</h1>\n      {foodDataWithAllergen.length > 0 ? (\n        <ul>\n          {foodDataWithAllergen.map((product, index) => (\n            <li key={index}>\n              <h2>{product.product_name}</h2>\n              <p>Brand: {product.brands}</p>\n              <p>Quantity: {product.quantity}</p>\n              <p>Ingredients: {product.ingredients_text}</p>\n              {product.image_url && <img src={product.image_url} alt={product.product_name} width=\"100\" />}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No products found.</p>\n      )}\n\n      <h1>Food Products Without Milk</h1>\n      {foodDataWithoutAllergen.length > 0 ? (\n        <ul>\n          {foodDataWithoutAllergen.map((product, index) => (\n            <li key={index}>\n              <h2>{product.product_name}</h2>\n              <p>Brand: {product.brands}</p>\n              <p>Quantity: {product.quantity}</p>\n              <p>Ingredients: {product.ingredients_text}</p>\n              {product.image_url && <img src={product.image_url} alt={product.product_name} width=\"100\" />}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No products found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default FoodListZwei;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAG,MAAOC,GAAG,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,QAAQ;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIJ,KAAK,CAACI,KAAK,CAACC,OAAO,CAAC;EAChC;AACF,CAAC;AAED,MAAMC,6BAA6B,GAAGA,CAACH,QAAQ,EAAEI,QAAQ,KAAK;EAC5D,OAAOJ,QAAQ,CAACK,MAAM,CAACC,OAAO,IAAI;IAChC,IAAI,CAACA,OAAO,CAACC,gBAAgB,EAAE,OAAO,IAAI;IAC1C,OAAO,CAACD,OAAO,CAACC,gBAAgB,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,QAAQ,CAAC;EACnE,CAAC,CAAC;AACJ,CAAC;AAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACyB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACY,KAAK,EAAEe,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM1B,GAAG,GAAG,8GAA8G;QAE1H,MAAM2B,WAAW,GAAG,MAAM5B,kBAAkB,CAACC,GAAG,CAAC;QAEjD,MAAM4B,oBAAoB,GAAGD,WAAW,CAACf,MAAM,CAACC,OAAO,IACrDA,OAAO,CAACC,gBAAgB,IAAID,OAAO,CAACC,gBAAgB,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CACpF,CAAC;QAED,MAAMa,uBAAuB,GAAGnB,6BAA6B,CAACiB,WAAW,EAAE,MAAM,CAAC;QAElFP,uBAAuB,CAACQ,oBAAoB,CAAC;QAC7CN,0BAA0B,CAACO,uBAAuB,CAAC;QACnDJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACde,QAAQ,CAACf,KAAK,CAACC,OAAO,CAAC;QACvBgB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAO1B,OAAA;MAAAgC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI1B,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAgC,QAAA,GAAK,SAAO,EAACtB,KAAK;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACEpC,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/Bf,oBAAoB,CAACgB,MAAM,GAAG,CAAC,gBAC9BrC,OAAA;MAAAgC,QAAA,EACGX,oBAAoB,CAACiB,GAAG,CAAC,CAACvB,OAAO,EAAEwB,KAAK,kBACvCvC,OAAA;QAAAgC,QAAA,gBACEhC,OAAA;UAAAgC,QAAA,EAAKjB,OAAO,CAACyB;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BpC,OAAA;UAAAgC,QAAA,GAAG,SAAO,EAACjB,OAAO,CAAC0B,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BpC,OAAA;UAAAgC,QAAA,GAAG,YAAU,EAACjB,OAAO,CAAC2B,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCpC,OAAA;UAAAgC,QAAA,GAAG,eAAa,EAACjB,OAAO,CAACC,gBAAgB;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC7CrB,OAAO,CAAC4B,SAAS,iBAAI3C,OAAA;UAAK4C,GAAG,EAAE7B,OAAO,CAAC4B,SAAU;UAACE,GAAG,EAAE9B,OAAO,CAACyB,YAAa;UAACM,KAAK,EAAC;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GALrFG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpC,OAAA;MAAAgC,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB,eAEDpC,OAAA;MAAAgC,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClCb,uBAAuB,CAACc,MAAM,GAAG,CAAC,gBACjCrC,OAAA;MAAAgC,QAAA,EACGT,uBAAuB,CAACe,GAAG,CAAC,CAACvB,OAAO,EAAEwB,KAAK,kBAC1CvC,OAAA;QAAAgC,QAAA,gBACEhC,OAAA;UAAAgC,QAAA,EAAKjB,OAAO,CAACyB;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BpC,OAAA;UAAAgC,QAAA,GAAG,SAAO,EAACjB,OAAO,CAAC0B,MAAM;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BpC,OAAA;UAAAgC,QAAA,GAAG,YAAU,EAACjB,OAAO,CAAC2B,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCpC,OAAA;UAAAgC,QAAA,GAAG,eAAa,EAACjB,OAAO,CAACC,gBAAgB;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC7CrB,OAAO,CAAC4B,SAAS,iBAAI3C,OAAA;UAAK4C,GAAG,EAAE7B,OAAO,CAAC4B,SAAU;UAACE,GAAG,EAAE9B,OAAO,CAACyB,YAAa;UAACM,KAAK,EAAC;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GALrFG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpC,OAAA;MAAAgC,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5EID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA8ElB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}