{"ast":null,"code":"var _jsxFileName = \"/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/no_shit_day/frontend/src/components/GamePanel/ChoicesGrid/ChoicesGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./ChoicesGrid.scss\";\nimport Toiletpaper from \"../../../assets/images/toiletpaper.png\";\nimport emptyToiletpaper from \"../../../assets/img/emptyToiletpaper.png\";\nimport ChoicesCard from \"../ChoiceCard/ChoiceCard\";\nimport Button from \"../../Button/Button\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChoicesGrid = ({\n  gameOptions,\n  playersChoice,\n  setPlayersChoice,\n  lives,\n  setLives,\n  productsWithMilk,\n  setResult\n}) => {\n  _s();\n  const [isSelected, setIsSelcted] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleChoiceSelection = option => {\n    setSelectedOption(option);\n  };\n  console.log(\"playersChoice: \", playersChoice);\n  let navigate = useNavigate();\n  const redirect = () => {\n    if (lives > 0) {\n      navigate(\"/result\");\n    } else {\n      navigate(\"/gameover\");\n    }\n  };\n  const handleAnswerCheck = () => {\n    if (productsWithMilk.includes(playersChoice)) {\n      setResult(\"loose\");\n      setLives(lives - 1);\n      redirect();\n    } else {\n      setResult(\"win\");\n      redirect();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"choicesGrid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headingLivesWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Das Laktose-Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"W\\xE4hle das Produkt OHNE Laktose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"livesContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Deine verbliebenen Leben:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), lives === 3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : lives === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : lives === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Toiletpaper,\n            alt: \"Toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: emptyToiletpaper,\n            alt: \"Empty toiletpaper roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: gameOptions.map((option, index) => {\n        return /*#__PURE__*/_jsxDEV(ChoicesCard, {\n          option: option,\n          index: index,\n          setPlayersChoice: handleChoiceSelection,\n          isSelected: selectedOption === option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\xDCberpr\\xFCfen\",\n      action: handleAnswerCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ChoicesGrid, \"KyH0IwA3IVy0qdQ2iaAo4SwJ0eE=\", false, function () {\n  return [useNavigate];\n});\n_c = ChoicesGrid;\nexport default ChoicesGrid;\nvar _c;\n$RefreshReg$(_c, \"ChoicesGrid\");","map":{"version":3,"names":["React","useState","Toiletpaper","emptyToiletpaper","ChoicesCard","Button","useNavigate","jsxDEV","_jsxDEV","ChoicesGrid","gameOptions","playersChoice","setPlayersChoice","lives","setLives","productsWithMilk","setResult","_s","isSelected","setIsSelcted","selectedOption","setSelectedOption","handleChoiceSelection","option","console","log","navigate","redirect","handleAnswerCheck","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","index","text","action","_c","$RefreshReg$"],"sources":["/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/no_shit_day/frontend/src/components/GamePanel/ChoicesGrid/ChoicesGrid.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./ChoicesGrid.scss\";\nimport Toiletpaper from \"../../../assets/images/toiletpaper.png\";\nimport emptyToiletpaper from \"../../../assets/img/emptyToiletpaper.png\";\nimport ChoicesCard from \"../ChoiceCard/ChoiceCard\";\nimport Button from \"../../Button/Button\";\nimport { useNavigate } from 'react-router-dom';\n\nconst ChoicesGrid = ({gameOptions, playersChoice, setPlayersChoice, lives, setLives, productsWithMilk, setResult }) => {\n  const [isSelected, setIsSelcted] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleChoiceSelection = (option) => {\n    setSelectedOption(option);\n  };\n  console.log(\"playersChoice: \", playersChoice);\n\n  let navigate = useNavigate();\n  const redirect = ()=>{\n    if(lives > 0){\n      navigate(\"/result\")\n    } else {\n      navigate(\"/gameover\")\n    }\n  };\n\n  const handleAnswerCheck = () => {\n    if(productsWithMilk.includes(playersChoice)){\n      setResult(\"loose\");\n      setLives(lives-1);\n      redirect();\n    } else{\n      setResult(\"win\");\n      redirect();\n    }\n  };\n  \n  \n  return (\n    <section className='choicesGrid'>\n        <div className='headingLivesWrapper'>\n        <div className='heading'>\n          <h2>Das Laktose-Quiz</h2>\n          <h2>WÃ¤hle das Produkt OHNE Laktose!</h2>\n        </div>\n        <div className='livesContainer'>\n          <p>Deine verbliebenen Leben:</p>\n          {(lives === 3) ? \n            <div className='lives'>\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n            </div>\n            : (lives === 2) ? \n            <div className='lives'>\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n            </div>\n            : (lives === 1) ?\n            <div className='lives'>\n              <img src={Toiletpaper} alt='Toiletpaper roll' />\n            </div>\n            :<div className='lives'>\n              <img src={emptyToiletpaper} alt='Empty toiletpaper roll' />\n            </div>\n            }\n        </div>\n        </div>\n        <div className='options'>\n          {gameOptions.map((option, index)=>{\n            return(\n          <ChoicesCard \n          key={index}\n          option={option}\n          index={index}\n          setPlayersChoice={handleChoiceSelection}\n          isSelected={selectedOption === option}\n        />\n        )})}\n        </div>\n        <Button text=\"ÃberprÃ¼fen\" action={handleAnswerCheck}/>\n      \n    </section>\n  )\n}\n\nexport default ChoicesGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}