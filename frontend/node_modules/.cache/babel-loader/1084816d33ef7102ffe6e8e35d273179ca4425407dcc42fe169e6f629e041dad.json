{"ast":null,"code":"var _jsxFileName = \"/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchOpenFoodFacts = async url => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.products;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nconst FoodList = () => {\n  _s();\n  const [foodDataWithAllergen, setFoodDataWithAllergen] = useState([]);\n  const [foodDataWithoutAllergen, setFoodDataWithoutAllergen] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const urlWithAllergen = 'https://world.openfoodfacts.org/api/v2/search?allergens_tags=milk&fields=product_name,brands,quantity,ingredients_text,image_url';\n        const urlWithoutAllergen = 'https://world.openfoodfacts.org/api/v2/search?allergens_tags_n=milk&fields=product_name,brands,quantity,ingredients_text,image_url';\n        const [dataWithAllergen, dataWithoutAllergen] = await Promise.all([fetchOpenFoodFacts(urlWithAllergen), fetchOpenFoodFacts(urlWithoutAllergen)]);\n        setFoodDataWithAllergen(dataWithAllergen);\n        setFoodDataWithoutAllergen(dataWithoutAllergen);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Products With Milk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), foodDataWithAllergen.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodDataWithAllergen.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Brand: \", product.brands]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ingredients: \", product.ingredients_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), product.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image_url,\n          alt: product.product_name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Products Without Milk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), foodDataWithoutAllergen.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodDataWithoutAllergen.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Brand: \", product.brands]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", product.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ingredients: \", product.ingredients_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), product.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image_url,\n          alt: product.product_name,\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodList, \"2qsnZhrqCocfxLJkgtWB3edhyLI=\");\n_c = FoodList;\nexport default FoodList;\nvar _c;\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","fetchOpenFoodFacts","url","response","fetch","ok","Error","data","json","products","error","message","FoodList","_s","foodDataWithAllergen","setFoodDataWithAllergen","foodDataWithoutAllergen","setFoodDataWithoutAllergen","setError","loading","setLoading","fetchData","urlWithAllergen","urlWithoutAllergen","dataWithAllergen","dataWithoutAllergen","Promise","all","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","index","product_name","brands","quantity","ingredients_text","image_url","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst fetchOpenFoodFacts = async (url) => {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.products;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nconst FoodList = () => {\n  const [foodDataWithAllergen, setFoodDataWithAllergen] = useState([]);\n  const [foodDataWithoutAllergen, setFoodDataWithoutAllergen] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const urlWithAllergen = 'https://world.openfoodfacts.org/api/v2/search?allergens_tags=milk&fields=product_name,brands,quantity,ingredients_text,image_url';\n        const urlWithoutAllergen = 'https://world.openfoodfacts.org/api/v2/search?allergens_tags_n=milk&fields=product_name,brands,quantity,ingredients_text,image_url';\n\n        const [dataWithAllergen, dataWithoutAllergen] = await Promise.all([\n          fetchOpenFoodFacts(urlWithAllergen),\n          fetchOpenFoodFacts(urlWithoutAllergen),\n        ]);\n\n        setFoodDataWithAllergen(dataWithAllergen);\n        setFoodDataWithoutAllergen(dataWithoutAllergen);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Food Products With Milk</h1>\n      {foodDataWithAllergen.length > 0 ? (\n        <ul>\n          {foodDataWithAllergen.map((product, index) => (\n            <li key={index}>\n              <h2>{product.product_name}</h2>\n              <p>Brand: {product.brands}</p>\n              <p>Quantity: {product.quantity}</p>\n              <p>Ingredients: {product.ingredients_text}</p>\n              {product.image_url && <img src={product.image_url} alt={product.product_name} width=\"100\" />}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No products found.</p>\n      )}\n\n      <h1>Food Products Without Milk</h1>\n      {foodDataWithoutAllergen.length > 0 ? (\n        <ul>\n          {foodDataWithoutAllergen.map((product, index) => (\n            <li key={index}>\n              <h2>{product.product_name}</h2>\n              <p>Brand: {product.brands}</p>\n              <p>Quantity: {product.quantity}</p>\n              <p>Ingredients: {product.ingredients_text}</p>\n              {product.image_url && <img src={product.image_url} alt={product.product_name} width=\"100\" />}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No products found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default FoodList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}