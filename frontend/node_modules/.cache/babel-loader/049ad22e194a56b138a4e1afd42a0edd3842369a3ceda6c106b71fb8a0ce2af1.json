{"ast":null,"code":"var _jsxFileName = \"/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchFoodData = async url => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const data = await response.json();\n  return data.products;\n};\nconst FoodComponent = () => {\n  _s();\n  const [productsWithMilk, setProductsWithMilk] = useState([]);\n  const [productsWithoutMilk, setProductsWithoutMilk] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchAllProductsWithMilk = async () => {\n    const pageSize = 100; // Number of products per page\n    let page = 1;\n    let allProductsWithMilk = [];\n    let hasMore = true;\n    while (hasMore) {\n      const url = `https://world.openfoodfacts.org/api/v2/search?allergens_tags=milk&fields=product_name,brands,quantity,ingredients_text,image_url,allergens_tags&page=${page}&page_size=${pageSize}`;\n      try {\n        const products = await fetchFoodData(url);\n        allProductsWithMilk = [...allProductsWithMilk, ...products];\n\n        // If the number of products returned is less than the page size, we have reached the end\n        if (products.length < pageSize) {\n          hasMore = false;\n        } else {\n          page += 1;\n        }\n      } catch (error) {\n        setError(error.message);\n        hasMore = false;\n      }\n    }\n    return allProductsWithMilk;\n  };\n  const fetchAllProductsWithoutMilk = async () => {\n    const pageSize = 100; // Number of products per page\n    let page = 1;\n    let allProductsWithoutMilk = [];\n    let hasMore = true;\n    while (hasMore) {\n      const url = `https://world.openfoodfacts.org/api/v2/search?fields=product_name,brands,quantity,ingredients_text,image_url,allergens_tags&page=${page}&page_size=${pageSize}`;\n      try {\n        const products = await fetchFoodData(url);\n        // Filter out products that contain milk as allergen\n        const productsWithoutMilk = products.filter(product => !product.allergens_tags || !product.allergens_tags.includes('milk'));\n        allProductsWithoutMilk = [...allProductsWithoutMilk, ...productsWithoutMilk];\n\n        // If the number of products returned is less than the page size, we have reached the end\n        if (products.length < pageSize) {\n          hasMore = false;\n        } else {\n          page += 1;\n        }\n      } catch (error) {\n        setError(error.message);\n        hasMore = false;\n      }\n    }\n    return allProductsWithoutMilk;\n  };\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const productsWithMilk = await fetchAllProductsWithMilk();\n        const productsWithoutMilk = await fetchAllProductsWithoutMilk();\n        setProductsWithMilk(productsWithMilk);\n        setProductsWithoutMilk(productsWithoutMilk);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products with Milk as Allergen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), productsWithMilk.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.product_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Brand: \", product.brands]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", product.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ingredients: \", product.ingredients_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image_url,\n        alt: product.product_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products without Milk as Allergen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), productsWithoutMilk.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.product_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Brand: \", product.brands]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", product.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ingredients: \", product.ingredients_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image_url,\n        alt: product.product_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodComponent, \"ozaZmHg7untWTWUiCRs62jEiY+I=\");\n_c = FoodComponent;\nexport default FoodComponent;\nvar _c;\n$RefreshReg$(_c, \"FoodComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","fetchFoodData","url","response","fetch","ok","Error","data","json","products","FoodComponent","_s","productsWithMilk","setProductsWithMilk","productsWithoutMilk","setProductsWithoutMilk","error","setError","fetchAllProductsWithMilk","pageSize","page","allProductsWithMilk","hasMore","length","message","fetchAllProductsWithoutMilk","allProductsWithoutMilk","filter","product","allergens_tags","includes","getData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","product_name","brands","quantity","ingredients_text","src","image_url","alt","_c","$RefreshReg$"],"sources":["/Users/janine/Desktop/Coding Workshops & Hackathons/Hackathon Chromik/aufgabe-zwei/src/test3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst fetchFoodData = async (url) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  const data = await response.json();\n  return data.products;\n};\n\nconst FoodComponent = () => {\n  const [productsWithMilk, setProductsWithMilk] = useState([]);\n  const [productsWithoutMilk, setProductsWithoutMilk] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchAllProductsWithMilk = async () => {\n    const pageSize = 100; // Number of products per page\n    let page = 1;\n    let allProductsWithMilk = [];\n    let hasMore = true;\n\n    while (hasMore) {\n      const url = `https://world.openfoodfacts.org/api/v2/search?allergens_tags=milk&fields=product_name,brands,quantity,ingredients_text,image_url,allergens_tags&page=${page}&page_size=${pageSize}`;\n\n      try {\n        const products = await fetchFoodData(url);\n        allProductsWithMilk = [...allProductsWithMilk, ...products];\n\n        // If the number of products returned is less than the page size, we have reached the end\n        if (products.length < pageSize) {\n          hasMore = false;\n        } else {\n          page += 1;\n        }\n      } catch (error) {\n        setError(error.message);\n        hasMore = false;\n      }\n    }\n\n    return allProductsWithMilk;\n  };\n\n  const fetchAllProductsWithoutMilk = async () => {\n    const pageSize = 100; // Number of products per page\n    let page = 1;\n    let allProductsWithoutMilk = [];\n    let hasMore = true;\n\n    while (hasMore) {\n      const url = `https://world.openfoodfacts.org/api/v2/search?fields=product_name,brands,quantity,ingredients_text,image_url,allergens_tags&page=${page}&page_size=${pageSize}`;\n\n      try {\n        const products = await fetchFoodData(url);\n        // Filter out products that contain milk as allergen\n        const productsWithoutMilk = products.filter(product => (\n          !product.allergens_tags || !product.allergens_tags.includes('milk')\n        ));\n        allProductsWithoutMilk = [...allProductsWithoutMilk, ...productsWithoutMilk];\n\n        // If the number of products returned is less than the page size, we have reached the end\n        if (products.length < pageSize) {\n          hasMore = false;\n        } else {\n          page += 1;\n        }\n      } catch (error) {\n        setError(error.message);\n        hasMore = false;\n      }\n    }\n\n    return allProductsWithoutMilk;\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const productsWithMilk = await fetchAllProductsWithMilk();\n        const productsWithoutMilk = await fetchAllProductsWithoutMilk();\n\n        setProductsWithMilk(productsWithMilk);\n        setProductsWithoutMilk(productsWithoutMilk);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    getData();\n  }, []);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Products with Milk as Allergen</h1>\n      {productsWithMilk.map((product, index) => (\n        <div key={index}>\n          <h2>{product.product_name}</h2>\n          <p>Brand: {product.brands}</p>\n          <p>Quantity: {product.quantity}</p>\n          <p>Ingredients: {product.ingredients_text}</p>\n          <img src={product.image_url} alt={product.product_name} />\n        </div>\n      ))}\n\n      <h1>Products without Milk as Allergen</h1>\n      {productsWithoutMilk.map((product, index) => (\n        <div key={index}>\n          <h2>{product.product_name}</h2>\n          <p>Brand: {product.brands}</p>\n          <p>Quantity: {product.quantity}</p>\n          <p>Ingredients: {product.ingredients_text}</p>\n          <img src={product.image_url} alt={product.product_name} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FoodComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}